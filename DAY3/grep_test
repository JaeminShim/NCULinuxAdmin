#!/bin/bash

# find: 파일 검색
#		ex> 확장자가 .c인 파일 중 1k 미만 크기이고,
#			최근 24시간 이내 수정된 파일을 찾아라


# grep: 파일 내 문자열 검색


# 0. test 파일 만들기 - 19장 243p
#ls /bin		> grep1.txt
#ls /usr/bin	> grep2.txt

#less grep2.txt


# 1. grep 기본 모양
#grep zip grep1.txt				# grep [options] [regex] [파일...]
#grep -n zip grep1.txt			# -n: 라인 번호 출력 - 244p 표
#grep zip grep1.txt grep2.txt	# 다중 파일 사용 예
#grep -h zip grep*				# -h: 파일 이름 숨기기

#grep1.txt에서 zip a 가 포함된 문장을 찾아보세요
#grep 'zip a' grep1.txt
#grep 'zip a' grep*


# 2. 정규 표현식 사용
#grep -h 'zip' grep*.txt #| wc -l
#echo "----------------------------"
#grep -h '.zip' grep*.txt #| wc -l	# '.': 메타문자 - 임의의 문자 1개(필수)
#echo "----------------------------"
#grep -h '\.zip' grep*.txt #| wc -l	# '\.': 문자 '.'


# 3. ^와 $
#grep -h '^zip' grep*.txt		# ^: 제일 앞의 요소가 zip 인 것
#grep -h 'zip$' grep*.txt		# $: 제일 마지막 요소의 조건
#grep -h '^zip$' grep*.txt

# BRE (Basic Regular Expression)
# .: 임의의 한 글자
# ^: 시작 문자열
# $: 마지막 문자열
# []
# 문자클래스: [:upper:]


#less /usr/share/dict/words		# 영어 사전 파일

# 행맨 게임 중 입니다. 5자리 단어를 맞추어야 합니다.
# 2번째가 e, 4번째가 p 입니다. 가능한 모든 단어를 출력하세요.
#grep '^.e.p.$' /usr/share/dict/words


# []와 문자 클래스
#grep -h '[bg]zip' grep*		# (b 또는 g) + zip
#grep -h '[^bg]zip' grep*		# (b 또는 g가 아닌 것) + zip
#grep -h '^[bg]zip' grep*		# (b 또는 g)로 시작하는 것 + zip

# 문장의 처음이 알파벳 대문자로 시작하는 모든 문장 검색
#grep -h '^[A-Z]' grep*.txt		# {A..Z} 또는 [A-Z]: A부터 Z까지
#grep -h '^[-AZ]' grep*.txt		# A, -, Z로 시작하는 문장

# 문자 클래스 사용 - 252p
#grep -h '^[[:upper:]]' 			grep*.txt
grep -h '^[[:upper:]][[:lower:]]'	grep*.txt








